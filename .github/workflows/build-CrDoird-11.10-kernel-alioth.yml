name: Build CrDoird-11.10 alioth Kernel and Create Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "选择分支"
        required: false
        default: "15.0-alioth-ksu"
        type: choice
        options:
          - 15.0-alioth-ksu
          - 15.0-alioth

env:
  REPO_URL: https://github.com/LeeHe-gif/android_kernel_xiaomi_sm8250
  REPO_BRANCH: ${{ inputs.branch }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install basic dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl build-essential \
            libncurses-dev bison bc flex libssl-dev gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi \
            libelf-dev rsync kmod git cpio wget zip \
            unzip python3 python-is-python3 make xz-utils python3-pip ccache rsync

      - name: Clone kernel source and setup KernelSU
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH
                
      - name: Build kernel with proton-clang-13.0
        run: |
          cp build1.sh android_kernel_xiaomi_sm8250/
          cd android_kernel_xiaomi_sm8250
          chmod 755 build1.sh
          ./build1.sh
            
      - name: Create anykernel3 package
        run: |
          # 复制内核镜像到 anykernel3 目录
          cp android_kernel_xiaomi_sm8250/out/arch/arm64/boot/Image.gz-dtb android_kernel_xiaomi_sm8250/AnyKernel3/
          # 进入 anykernel3 目录并创建刷机包
          cd android_kernel_xiaomi_sm8250/AnyKernel3/
          zip -r alioth_dockerkernel.zip *

          # 验证刷机包是否创建成功
          if [ -f "alioth_dockerkernel.zip" ]; then
            echo "✅ anykernel3 包创建成功"
            ls -la alioth_dockerkernel.zip
            echo "刷机包大小:"
            du -h alioth_dockerkernel.zip
          else
            echo "❌ anykernel3 包创建失败"
            exit 1
          fi
        
      - name: Create out directory archive
        run: |
          cd android_kernel_xiaomi_sm8250
          zip -r kernel_boot_directory.zip out/arch/arm64/boot
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-artifacts
          path: |
            android_kernel_xiaomi_sm8250/AnyKernel3/polaris_dockerkernel.zip
            android_kernel_xiaomi_sm8250/kernel_boot_directory.zip
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: kernel-build-artifacts
          path: ./artifact


      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "alioth-kernel-build"  # 添加固定的 tag 名称
          name: "alioth Docker Kernel Build (proton-clang-13.0.0)"
          body: |
            # alioth Docker Kernel Build
          
            使用 proton-clang-13.0.0 编译的红米k40 CrDoird-11.10版本内核
            分支：$REPO_URL
            ## 包含文件：
            - `alioth_dockerkernel.zip` - AnyKernel3 刷机包
            - `kernel_boot_directory.zip` - 完整的编译输出目录
          
            ## 特性：
            - ✅ 完整 Docker 容器支持
            - ✅ 基于 (CRDoird 15)[https://github.com/LeeHe-gif/android_kernel_xiaomi_sm8250/tree/15.0-alioth]内核源码
            
            ## 刷机说明（15.0-alioth-ksu分支使用ksu，15.0-alioth分支没有ksu）：
            1. 下载 `alioth_dockerkernel.zip`
            2. 通过 TWRP Recovery 刷入
            3. 刷入 Magisk（❗目前刷入面具卡会第一屏）
            3. 重启设备
            4. 安装 Magisk 应用管理 root 权限
          
            **注意：** 刷机前请备份重要数据。
          draft: false
          prerelease: false
          files: |
            ./artifact/alioth_dockerkernel.zip
            ./artifact/kernel_boot_directory.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
