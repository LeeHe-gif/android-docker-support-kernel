name: Build alioth Kernel and Create Release

on:
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install basic dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          curl build-essential \
          libncurses-dev bison bc flex libssl-dev gcc-aarch64-linux-gnu gcc-arm-linux-gnu \
          libelf-dev rsync kmod git cpio wget zip \
          unzip python3 python-is-python3 make xz-utils python3-pip ccache rsync

    - name: Download and setup proton-clang-13.0 toolchains
      run: |
        # 创建工具链目录
        sudo mkdir -p /opt
        sudo chmod 777 /opt
        cd /opt
        wget https://github.com/kdrag0n/proton-clang/archive/refs/tags/20210522.tar.gz
        tar -xf 20210522.tar.gz
        sudo chmod 777 proton-clang-20210522
        ls
        ls aarch64-linux-android-4.9/
        ls arm-linux-androideabi-4.9/

    - name: Clone kernel source and setup KernelSU
      run: |
        git clone -b 15.0-alioth --depth 1 https://github.com/LeeHe-gif/android_kernel_xiaomi_sm8250.git
        cd android_kernel_xiaomi_sm8250
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
                
    - name: Build kernel with proton-clang-13.0
      run: |
        cp build1.sh android_kernel_xiaomi_sm8250/
        cd android_kernel_xiaomi_sm8250
        chmod 755 build1.sh
        ./build1.sh
            
    - name: Create anykernel3 package
      run: |
        # 复制内核镜像到 anykernel3 目录
        cp android_kernel_xiaomi_sm8250/out/arch/arm64/boot/Image.gz-dtb android_kernel_xiaomi_sm8250/AnyKernel3/
        
        # 进入 anykernel3 目录并创建刷机包
        cd android_kernel_xiaomi_sm8250/AnyKernel3/
        zip -r alioth_dockerkernel.zip anykernel.sh Image.gz-dtb LICENSE META-INF modules patch tools README.md
        
        # 验证刷机包是否创建成功
        if [ -f "alioth_dockerkernel.zip" ]; then
          echo "✅ anykernel3 包创建成功"
          ls -la alioth_dockerkernel.zip
          echo "刷机包大小:"
          du -h alioth_dockerkernel.zip
        else
          echo "❌ anykernel3 包创建失败"
          exit 1
        fi
        
    - name: Create out directory archive
      run: |
        cd android_kernel_xiaomi_sm8250
        zip -r kernel_boot_directory.zip out/arch/arm64/boot
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-build-artifacts
        path: |
          android_kernel_xiaomi_sm8250/AnyKernel3/polaris_dockerkernel.zip
          android_kernel_xiaomi_sm8250/kernel_boot_directory.zip
        retention-days: 30

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "alioth-kernel-build"  # 添加固定的 tag 名称
        name: "alioth Docker Kernel Build (GCC 4.9.0)"
        body: |
          # alioth Docker Kernel Build
          
          使用 GCC 4.9.0 编译的红米k40 crdoird15 内核
          
          ## 包含文件：
          - `alioth_dockerkernel.zip` - AnyKernel3 刷机包
          - `kernel_boot_directory.zip` - 完整的编译输出目录
          
          ## 特性：
          - ✅ 完整 Docker 容器支持
          - ✅ 基于 CRDoird 15 内核源码
          - ✅ 优化性能和稳定性
          
          ## 刷机说明：
          1. 下载 `alioth_dockerkernel.zip`
          2. 通过 TWRP Recovery 刷入
          3. 重启设备
          4. 安装 KernelSU Manager 应用管理 root 权限
          
          **注意：** 刷机前请备份重要数据。
        draft: false
        prerelease: false
        files: |
          android_kernel_xiaomi_sm8250/AnyKernel3/alioth_dockerkernel.zip
          android_kernel_xiaomi_sm8250/kernel_boot_directory.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}